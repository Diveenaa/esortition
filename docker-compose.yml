version: '3.8'
services:
  nginx-api-gateway:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - '80:80'
    depends_on:
      - voting_manager-service
  
  election_mgmt_service-app:
    build: ./election_mgmt_service
    environment:
      - FLASK_APP=/election_mgmt_service-app/election_service.py
      - DATABASE_URL=sqlite:///db.sqlite
    ports:
      - '3000:3000'
    volumes:
      - ./election_mgmt_service:/election_mgmt_service-app
      - ./data:/data  # Mount a volume to persist the SQLite database file
  
  microservice1-app:
    build: ./microservice1
    environment:
      - FLASK_APP=/microservice1-app/micro_app.py
    ports:
      - "5002:5001"

  admin_app-app:
    build: ./admin_app
    environment:
      - FLASK_APP=/admin_app-app/app.py
    ports:
      - '5001:5000'
    volumes:
      - ./admin_app:/admin_app-app

  voting_app-app:
    build: ./voting_app
    environment:
      - FLASK_APP=/voting_app-app/voting_app.py
      # - DATABASE_URL=postgresql://postgres:postgres@db/esortition_voting
    ports:
      - '5002:5001'
    volumes:
      - ./voting_app:/voting_app-app
    # depends_on:
    #   - db

  # Voting Microservice

  voting_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: esortition_voting

  voting_manager-service:
    build: ./voting_manager
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@voting_db/esortition_voting
      - FASTAPI_APP=/voting_manager-service/voting_manager_service.py
      # - FLASK_APP=/voting_manager-app/voting_manager_service.py

    ports:
      - '5003:5002'
    volumes:
      - ./voting_manager:/voting_manager-service
    depends_on:
      - voting_db

  # ports:
  #   - '5432:5432'

  # db:
  #   image: postgres:latest
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: esortition_voting
