version: '3.8'

services:
  ############################## API GATEWAY #####################################
  # nginx-api-gateway:
  #   image: nginx:latest
  #   volumes:
  #     - ./nginx_api_gateway/dev-nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - '80:80'
  #   depends_on:
  #     - voting_manager-service

  kong:
    image: kong:latest
    volumes:
      - ./kong_api_gateway/kong.yml:/usr/local/kong/declarative/kong.yml
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - "8000:8000"
      - "8443:8443"
      - "127.0.0.1:8001:8001"
      - "127.0.0.1:8444:8444"

  ################################### ADMIN PORTAL ###############################
  admin_portal-app:
    build:
      context: ./admin_portal
      dockerfile: dev.Dockerfile
    expose:
      - 5001
    command: python3 -m flask run --reload --port=5001 --host=0.0.0.0
    environment:
      - FLASK_APP=/admin_portal-app/app:app
      - API_GATEWAY_URL=http://host.docker.internal:8000/
    ports:
      - '5001:5001'
    volumes:
      - ./admin_portal:/admin_portal-app

  ################### ELECTION MANAGEMENT MICROSERVICE ###########################
  election_mgmt_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: esortition_election_mgmt
    # ports:
    #   - '5433:5433'

  election_mgmt_service-service:
    build:
      context: ./election_mgmt_service
      dockerfile: dev.Dockerfile
    expose:
      - 5003
    command: python3 -m flask run --reload --port=5003 --host=0.0.0.0
    environment:
      - FLASK_APP=/election_mgmt_service-service/myapp:app
      - EXTERNAL_EMAIL_URL=http://localhost:5002/
      - DATABASE_URL=postgresql://postgres:postgres@election_mgmt_db/esortition_election_mgmt
    ports:
      - '5003:5003'
    volumes:
      - ./election_mgmt_service:/election_mgmt_service-service
    depends_on:
      - election_mgmt_db

  ################### ADMIN MANAGEMENT MICROSERVICE ##############################
  admin_mgmt_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: esortition_admin_mgmt
    # ports:
    #   - '5434:5434'

  admin_mgmt_service-service:
    build:
      context: ./admin_mgmt_service
      dockerfile: dev.Dockerfile
    expose:
      - 5004
    command: python3 -m flask run --reload --port=5004 --host=0.0.0.0
    environment:
      - FLASK_APP=/admin_mgmt_service-service/myapp/admin_service.py
      - ADMIN_DATABASE_URL=postgresql://postgres:postgres@admin_mgmt_db/esortition_admin_mgmt
    ports:
      - '5004:5004'
    volumes:
      - ./admin_mgmt_service:/admin_mgmt_service-service
    depends_on:
      - admin_mgmt_db

  ############################## VOTING APP ######################################
  voting_app-app:
    build:
      context: ./voting_app
      dockerfile: dev.Dockerfile
    expose:
      - 5002
    command: python3 -m flask run --reload --port=5002 --host=0.0.0.0
    environment:
      - FLASK_APP=/voting_app-app/voting_app.py
      - API_GATEWAY_URL=http://host.docker.internal:8000/
    ports:
      - '5002:5002'
    volumes:
      - ./voting_app:/voting_app-app

  ########################### VOTING MICROSERVICE ################################
  voting_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: esortition_voting
    # ports:
    #   - '5435:5435'

  voting_manager-service:
    build:
      context: ./voting_manager
      dockerfile: dev.Dockerfile
    expose:
      - 5005
    command: python3 -m flask run --reload --port=5005 --host=0.0.0.0
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@voting_db/esortition_voting
      - FLASK_APP=/voting_manager-service/myapp/voting_manager_service.py
    ports:
      - '5005:5005'
    volumes:
      - ./voting_manager:/voting_manager-service
    depends_on:
      - voting_db
